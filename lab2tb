library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BCD_brojac_tb is
end BCD_brojac_tb;

architecture sim of BCD_brojac_tb is
    -- Component Declaration for Unit Under Test (UUT)
    component BCD_brojac
        port(
            clock : in bit;
            reset : in bit;
            CE : in bit;
            WR : in bit;
            Din : in unsigned(11 downto 0);
            Dout : out unsigned(11 downto 0)
        );
    end component;

    -- Clock signal generation process
    constant clk_period : time := 10 ns;
    signal clock : bit := '0';
    signal reset : bit := '0';
    signal CE : bit := '0';
    signal WR : bit := '0';
    signal Din : unsigned(11 downto 0) := (others => '0');
    signal Dout : unsigned(11 downto 0);

begin
    -- Instantiate the Unit Under Test (UUT)
    UUT : BCD_brojac
        port map(
            clock => clock,
            reset => reset,
            CE => CE,
            WR => WR,
            Din => Din,
            Dout => Dout
        );

    -- Clock process definitions
    clk_process : process
    begin
        while now < 1000 ns loop
            clock <= '0';
            wait for clk_period / 2;
            clock <= '1';
            wait for clk_period / 2;
        end loop;
        wait;
    end process;

    -- Stimulus process
    stim_proc : process
    begin
        -- Reset
        reset <= '1';
        wait for 10 ns;
        reset <= '0';
        wait for 10 ns;

        -- Write data
        Din <= "000100000001";
        CE <= '1';
        WR <= '1';
        wait for 10 ns;

        -- Disable write
        WR <= '0';
        wait for 20 ns;

        -- Enable write
        WR <= '1';
        wait for 10 ns;

        -- Reset
        reset <= '1';
        wait for 10 ns;
        reset <= '0';
        wait for 10 ns;

        -- Write data
        Din <= "000000000011";
        CE <= '1';
        WR <= '1';
        wait for 10 ns;

        -- Disable write
        WR <= '0';
        wait for 10 ns;

        -- Enable write
        WR <= '1';
        wait for 10 ns;

        -- Stimulus ends
        wait;
    end process;

end sim;
